

// --------------------------------------------------------------------------
//    BUTTONS
// --------------------------------------------------------------------------


@mixin buttonBase() {
	@include baseTransition();
	background-color: rgba( palette(brand-complement), 1 );
	border-color: palette(brand-complement);
	border-radius: size(border-radius, base);
	border-style: solid;
	border-width: 1px;
	padding: 0 space(0.75);
	// transition: all transition(duration, short) transition(type, base);
	// vertical-align: top; // 1.

	a {

	}

	&[disabled] {
		border-color: palette(muted);
		background-color: palette(muted);
		cursor: not-allowed;
		opacity: 0.4;
	}

	@include on-event() {
		// background-color: rgba( palette(brand-complement), 0.5 );
		opacity: 0.5;
		outline: none !important;
	}
}


// Primary button
// --------------------------------------------------------------------------

@mixin textButton() {
	@include typeReset();
	color: palette(white);
	font-family: $font-sans-medium;
	font-size: fontsize(textSm, xs);
	letter-spacing: 0.05em;
	line-height: size(button-height, base);
	text-transform: uppercase;

	@include respond-to(xs) {
		font-size: fontsize(textSm, base);
	}

	@include on-event() {
		color: palette(white);
	}
}

@mixin button() {
	@include buttonBase();
	@include textButton();
}

.t-button {
	@include button;
}

.t-button--brand {
	@include button;
	background-color: palette(brand);
	border-color: palette(brand);
}

.t-button--rev {
	@include button;
	background-color: transparent;
	border-color: currentColor;
	border-width: 1px;
}


// Secondary buttons
// --------------------------------------------------------------------------

@mixin textButtonSm(
	$mixinColor: palette(brand-complement),
	$mixinBorderColor: $mixinColor
) {
	@include typeReset();
	color: $mixinColor;
	font-family: $font-sans-medium;
	font-size: fontsize(textXs, xs);
	letter-spacing: 0.05em;
	line-height: size(button-height, concise);
	text-transform: uppercase;

	@include respond-to(xs) {
		font-size: fontsize(textXs, base);
	}

	@include on-event() {
		// border-color: rgba( $mixinBorderColor, 0.5);
		// color: rgba( $mixinColor, 0.5);
		color: $mixinColor;
	}
}

@mixin buttonSecondary() {
	@include buttonBase();
	@include textButtonSm();
	background-color: transparent;
	border-color: currentColor;
	border-width: 1px;
	line-height: size(button-height, concise) !important;
	padding-top: 1px;

	@include on-event() {
	}
}

.t-buttonSecondary {
	@include buttonSecondary();
}


// Invisible button (for holding the touch space & layout)
// --------------------------------------------------------------------------

@mixin buttonInvisible () {
	@include buttonBase();
	@include textButtonSm($mixinColor: palette(brand) );
	background-color: transparent;
	border-color: transparent;
	padding: 0 0 0 space(0.75);
	text-transform: none;

	@include on-event() {
		color: palette(brand);
	}
}

.t-buttonInvisible {
	@include buttonInvisible();
}


// Button sizes
// --------------------------------------------------------------------------

.t-button {
	@include button;

	&--md {
		line-height: size(button-height, base);
		text-align: center;
		width: space(5);

		@include respond-to(xs) {
			width: space(6);
		}
	}

	&--lg {
		line-height: size(button-height, large);
		text-align: center;
		width: 100%;

		@include respond-to(sm) {
			width: space(12);
		}
	}

	&--full {
		line-height: size(button-height, large);
		text-align: center;
		width: 100%;
	}
}

.t-xs-button {
	@include respond-to(xs) {
		&--md {
			line-height: size(button-height, base);
			text-align: center;
			width: space(6);
		}
	}
}


// Close button (this just positions an icon)
// --------------------------------------------------------------------------

.t-buttonClose {
	color: palette(brand);
	position: fixed;
	right: space(0.5);
	top: space(0.5);
	z-index: map-fetch($z-index, first);

	@include on-event() {
		outline: none;
	}

	@include respond-to(xs) {
		right: space(1);
		top: 31px;
	}
}



// Subtitle
// --------------------------------------------------------------------------

// use this to vertically align elements with a button
// .ButtonLineHeight {
//     line-height: size(button-height, base);
//     vertical-align: bottom;
// }

// padding-top: 2px; // theme typography alignment
