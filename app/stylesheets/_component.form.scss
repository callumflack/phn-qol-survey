

// --------------------------------------------------------------------------
// 	 FORM
// 	 Large refactor required…
// --------------------------------------------------------------------------


input,
textarea,
select,
label {
	// @include TextSm();
	// color: palette(medium);

	@include on-event() {
		outline: 0;
	}
}

input:not([type="radio"]),
input:not([type="submit"]),
input:not(".Button"),
input[type="text"],
input[type="email"],
input[type="tel"],
textarea {
	@include TextSm();
	color: palette(medium);
	background: transparent;
	border: 1px solid transparent;
	border-radius: size(border-radius, base);
	display: inline-block;
	line-height: size(button-height, base);
	padding: 0 space(2/3);
	resize: none;
	transition: all map-fetch($transition, duration, long) map-fetch($transition, type, base);
	width: 100%;
	-webkit-appearance: none;

	@include on-event() {
		outline: 0;
	}

	@include respond-to(max-xs) {
		// font-size: 16px;
	}

	&:-webkit-autofill {
		-webkit-box-shadow: 0 0 0 rem(100) darken( palette(neutral),4%) inset;
		-webkit-text-fill-color: palette(medium);
		background-clip: padding-box;
	}

	$color-placeholder: palette(medium);

	&::-webkit-input-placeholder { color: $color-placeholder; }
	&:-moz-placeholder           { color: $color-placeholder; }
	&::-moz-placeholder          { color: $color-placeholder; }
	&:-ms-input-placeholder      { color: $color-placeholder; }
}

// input,
// textarea {
// 	border: 1px solid palette(base);
// 	margin-bottom: space(0.5);
// }
//
// textarea {
// 	line-height: 1.5;
// 	padding-top: space(0.5);
// }





// REFACTOR: text inputs only so I don't override radio btn component styles…

input[type="text"],
input[type="email"],
input[type="tel"] {
	@include TextMd();
	color: rgba( palette(brand-counter), 0.7 );
	background: transparent;
	border: 0;
	border-bottom: 1px solid transparent;
	border-color: rgba( palette(brand-counter), 0.4 );
	// border-radius: size(border-radius, base);
	display: inline-block;
	// font-family: $font-sans-regular;
	line-height: size(button-height, base);
	padding: 0;
	resize: none;
	transition: all map-fetch($transition, duration, long) map-fetch($transition, type, base);
	width: 100%;
	-webkit-appearance: none;

	@include on-event() {
		outline: 0;
	}

	@include respond-to(max-xs) {
		// font-size: 16px;
	}

	&:-webkit-autofill {
		-webkit-box-shadow: 0 0 0 rem(100) darken( palette(neutral),4%) inset;
		-webkit-text-fill-color: palette(medium);
		background-clip: padding-box;
	}

	$color-placeholder: rgba( palette(brand-counter), 0.7 );

	&::-webkit-input-placeholder { color: $color-placeholder; }
	&:-moz-placeholder           { color: $color-placeholder; }
	&::-moz-placeholder          { color: $color-placeholder; }
	&:-ms-input-placeholder      { color: $color-placeholder; }
}



// Form
// --------------------------------------------------------------------------

.Form {
	.Form-group {
		position: relative;

		&:not(:last-child) {
			margin: 0 0 space(1.1);
		}
	}

	label {
		@include TextMd();
		color: rgba( palette(brand-counter), 0.7 );
		cursor: text;
		left: 0;
		position: absolute;
		top: 6px;
		transition: all map-fetch($transition, duration, fast) map-fetch($transition, type, fine);
		z-index: 99;
	}
}

// Smaller form
.Form--sm {
	.Form-group {
		// line-height: size(button-height, base);
		line-height: 38px;
	}

	label {
		@include TextRg();
		color: palette(brand-counter);
	}

	[type="text"],
	[type="email"],
	[type="tel"] {
		line-height: inherit;
	}
}

// An icon wrapper used to style icon states in forms.
.Form-iconWrapper {
	color: transparent;
	line-height: size(button-height, concise);
	position: absolute;
	right: 33%;
}

// An icon wrapper used to style icon states in forms.
.Form-loadingWrapper {
	left: 0;
	line-height: size(button-height, concise);
	position: absolute;
	right: 0;
	top: 2px;

	.sk-spinner-pulse {
		background-color: transparent;
		height: size(button-height, concise);
		margin: auto;
		width: size(button-height, concise);
	}
}


// Form states
// --------------------------------------------------------------------------
// Three states:
// - is-pending
// - has-error
// - is-succcessful
// Alt method: &.is-active > label:not(.has-error)

// Common submitting/submitted state styles
.Form.is-active,
.Form.is-pending,
.Form.is-successful {
	label {
		font-size: 70%;
		transform: translate(1px, -18px);
	}
}

// Active state styles
.Form.is-active {
	// Floating label pattern, React manages state
	label {
		color: palette(brand-complement);
		// opacity: 1;
	}

	[type="text"],
	[type="email"],
	[type="tel"] {
		border-color: rgba( palette(brand-complement), 1 );
		color: palette(brand-complement);
	}
}

// Error state styles
.Form.has-error {
	label {
		color: palette(bad-news);
	}

	[type="text"],
	[type="email"],
	[type="tel"] {
		border-color: palette(bad-news) !important;
		color: palette(bad-news) !important;
	}

	[type="submit"], {
		opacity: 0.4;
	}
}

// Common submitting/submitted state styles
.Form.is-pending,
.Form.is-successful {
	label {
		color: palette(brand-complement);
	}

	[type="text"],
	[type="email"],
	[type="tel"] {
		border-color: palette(brand-complement);
		color: palette(brand-complement);
	}
}

// Submitting state styles
.Form.is-pending {
	[class*="t-buttonSecondary"] {
		// background-color: palette(brand-complement);
		border-color: palette(brand-complement);
		color: transparent;
	}

	.sk-spinner-pulse {
		background-color: palette(brand-complement);
	}
}

// Submitted state styles
.Form.is-successful {
	[class*="t-buttonSecondary"] {
		background-color: palette(brand-complement);
		border-color: palette(brand-complement);
		color: palette(white);
	}

	// Turn this off for now.
	// Need better control of x-position.
	.Form-iconWrapper {
		// color: palette(white);
	}
}


// Make the first form invisible until we scroll/click
// --------------------------------------------------------------------------

.FirstForm {
	@include baseTransition();
	opacity: 0;

	&.is-active {
		opacity: 1;
	}
}
